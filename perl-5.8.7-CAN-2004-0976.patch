--- perl-5.8.7/utils/c2ph.PL.CAN-2004-0976	2004-10-19 15:45:42.000000000 -0400
+++ perl-5.8.7/utils/c2ph.PL	2005-11-08 12:53:30.000000000 -0500
@@ -1320,7 +1320,7 @@
 	$intrinsics{$_[1]} = $template{$_[0]};
     }
     close(PIPE) || die "couldn't read intrinsics!";
-    unlink($TMP, '$SAFEDIR/a.out');
+    unlink($TMP, "$SAFEDIR/a.out");
     print STDERR "done\n" if $trace;
 }
 
--- perl-5.8.7/lib/Memoize/t/tie_storable.t.CAN-2004-0976	2002-07-12 15:56:19.000000000 -0400
+++ perl-5.8.7/lib/Memoize/t/tie_storable.t	2005-11-08 13:06:13.000000000 -0500
@@ -33,14 +33,7 @@
 
 print "1..4\n";
 
-
-if (eval {require File::Spec::Functions}) {
- File::Spec::Functions->import();
-} else {
-  *catfile = sub { join '/', @_ };
-}
-$tmpdir = $ENV{TMP} || $ENV{TMPDIR} ||  '/tmp';  
-$file = catfile($tmpdir, "storable$$");
+$file = "storable$$";
 1 while unlink $file;
 tryout('Memoize::Storable', $file, 1);  # Test 1..4
 1 while unlink $file;
--- perl-5.8.7/lib/Memoize/t/tie_ndbm.t.CAN-2004-0976	2005-04-22 07:36:58.000000000 -0400
+++ perl-5.8.7/lib/Memoize/t/tie_ndbm.t	2005-11-08 13:04:45.000000000 -0500
@@ -28,14 +28,7 @@
 
 print "1..4\n";
 
-
-if (eval {require File::Spec::Functions}) {
- File::Spec::Functions->import();
-} else {
-  *catfile = sub { join '/', @_ };
-}
-$tmpdir = $ENV{TMP} || $ENV{TMPDIR} ||  '/tmp';  
-$file = catfile($tmpdir, "md$$");
+$file = "md$$";
 1 while unlink $file, "$file.dir", "$file.pag", "$file.db";
 tryout('Memoize::NDBM_File', $file, 1);  # Test 1..4
 1 while unlink $file, "$file.dir", "$file.pag", "$file.db";
--- perl-5.8.7/lib/Memoize/t/tie.t.CAN-2004-0976	2002-07-12 15:56:19.000000000 -0400
+++ perl-5.8.7/lib/Memoize/t/tie.t	2005-11-08 13:03:20.000000000 -0500
@@ -29,14 +29,7 @@
   $_[0]+1;
 }
 
-if (eval {require File::Spec::Functions}) {
-  File::Spec::Functions->import('tmpdir', 'catfile');
-  $tmpdir = tmpdir();
-} else {
-  *catfile = sub { join '/', @_ };
-  $tmpdir = $ENV{TMP} || $ENV{TMPDIR} || '/tmp';
-}
-$file = catfile($tmpdir, "md$$");
+$file = "md$$";
 @files = ($file, "$file.db", "$file.dir", "$file.pag");
 1 while unlink @files;
 
--- perl-5.8.7/lib/Memoize/t/tie_sdbm.t.CAN-2004-0976	2002-07-12 15:56:19.000000000 -0400
+++ perl-5.8.7/lib/Memoize/t/tie_sdbm.t	2005-11-08 13:05:32.000000000 -0500
@@ -28,14 +28,7 @@
 
 print "1..4\n";
 
-if (eval {require File::Spec::Functions}) {
- File::Spec::Functions->import('tmpdir', 'catfile');
- $tmpdir = tmpdir();
-} else {
- *catfile = sub { join '/', @_ };
-  $tmpdir = $ENV{TMP} || $ENV{TMPDIR} || '/tmp';
-}
-$file = catfile($tmpdir, "md$$");
+$file = "md$$";
 1 while unlink $file, "$file.dir", "$file.pag";
 tryout('Memoize::SDBM_File', $file, 1);  # Test 1..4
 1 while unlink $file, "$file.dir", "$file.pag";
--- perl-5.8.7/lib/Memoize/t/tie_gdbm.t.CAN-2004-0976	2002-07-12 15:56:19.000000000 -0400
+++ perl-5.8.7/lib/Memoize/t/tie_gdbm.t	2005-11-08 13:04:03.000000000 -0500
@@ -26,13 +26,7 @@
 
 print "1..4\n";
 
-if (eval {require File::Spec::Functions}) {
- File::Spec::Functions->import();
-} else {
-  *catfile = sub { join '/', @_ };
-}
-$tmpdir = $ENV{TMP} || $ENV{TMPDIR} ||  '/tmp';  
-$file = catfile($tmpdir, "md$$");
+$file = "md$$";
 1 while unlink $file, "$file.dir", "$file.pag";
 tryout('GDBM_File', $file, 1);  # Test 1..4
 1 while unlink $file, "$file.dir", "$file.pag";
--- perl-5.8.7/lib/CGI/Cookie.pm.CAN-2004-0976	2005-05-16 04:41:03.000000000 -0400
+++ perl-5.8.7/lib/CGI/Cookie.pm	2005-11-08 14:56:15.141710000 -0500
@@ -407,7 +407,7 @@
 You may also retrieve cookies that were stored in some external
 form using the parse() class method:
 
-       $COOKIES = `cat /usr/tmp/Cookie_stash`;
+       $COOKIES = `cat /var/run/www/Cookie_stash`;
        %cookies = parse CGI::Cookie($COOKIES);
 
 If you are in a mod_perl environment, you can save some overhead by
--- perl-5.8.7/lib/Shell.pm.CAN-2004-0976	2004-06-01 05:42:17.000000000 -0400
+++ perl-5.8.7/lib/Shell.pm	2005-11-08 15:01:36.434664000 -0500
@@ -127,7 +127,7 @@
    use Shell qw(cat ps cp);
    $passwd = cat('</etc/passwd');
    @pslines = ps('-ww'),
-   cp("/etc/passwd", "/tmp/passwd");
+   cp("/etc/passwd", "/etc/passwd.orig");
 
    # object oriented 
    my $sh = Shell->new;
